#
# @synopsis: gerrit-httpd-view-tags [username]
# @description: Show tagged operations summary
#

# ------------------------------------------
# Check param to filter by username
# ------------------------------------------
;SELECT CASE
    WHEN $1 IS NULL THEN 'No'
    ELSE $1
    END AS user

;SELECT CASE
    WHEN $1 IS NULL THEN ''
    ELSE CONCAT("AND username = '", $1, "'")
    END AS and_user_filter

;SELECT CASE
    WHEN $1 IS NULL THEN ''
    ELSE CONCAT("WHERE username = '", $1, "'")
    END AS where_user_filter

# ------------------------------------------
# CREATE ON THE FLY TABLE FOR TAGS
# ------------------------------------------
;CREATE TABLE IF NOT EXISTS gerrit_tags
(
    tag  TEXT PRIMARY KEY,
    message TEXT
);
;INSERT OR IGNORE INTO gerrit_tags(tag, message) VALUES
    -- Git
    ('#git-upload-pack'                 ,'GIT-http - upload pack'),
    ('#git-receive-pack'                ,'GIT-http - receive pack'),
    -- Static content
    ('#static-fonts'                    ,'STATIC-CONTENT - fonts'),
    ('#static-bower'                    ,'STATIC-CONTENT - bower'),
    ('#static-elements'                 ,'STATIC-CONTENT - elements'),
    ('#static-styles'                   ,'STATIC-CONTENT - styles'),
    ('#static-documentation'            ,'STATIC-CONTENT - documentation'),
    ('#static-favicon'                  ,'STATIC-CONTENT - favicon'),
    -- Rest changes - writes
    ('#change-create'                   ,'REST-changes - create'),
    ('#change-set-ready'                ,'REST-changes - set ready'),
    ('#change-set-wip'                  ,'REST-changes - set wip'),
    ('#change-mark-private'             ,'REST-changes - mark private'),
    ('#change-unmark-private'           ,'REST-changes - unmark private'),
    ('#change-set-topic'                ,'REST-changes - set topic'),
    ('#change-delete-topic'             ,'REST-changes - delete topic'),
    ('#change-set-hastags'              ,'REST-changes - set hashtags'),
    ('#change-set-commit-message'       ,'REST-changes - set commit message'),
    ('#change-index'                    ,'REST-changes - index change'),
    ('#change-abandon'                  ,'REST-changes - abandon change'),
    ('#change-rebase'                   ,'REST-changes - rebase change'),
    ('#change-rebase-chain'             ,'REST-changes - rebase chain'),
    ('#change-submit'                   ,'REST-changes - submit change'),
    ('#revision-set-review'             ,'REST-changes - set revision'),
    ('#revision-set-description'        ,'REST-changes - set revision description'),
    ('#revision-create-draft-comment'   ,'REST-changes - create draft comment'),
    ('#revision-update-draft-comment'   ,'REST-changes - update draft comment'),
    ('#revision-delete-draft-comment'   ,'REST-changes - delete draft comment'),
    ('#revision-mark-file-reviewed'     ,'REST-changes - mark file reviewed'),
    ('#revision-delete-file-reviewed'   ,'REST-changes - delete file reviewed'),
    ('#revision-rebase'                 ,'REST-changes - rebase revision'),
    ('#revision-submit'                 ,'REST-changes - submit revision'),
    ('#revision-cherrypick'             ,'REST-changes - cherrypick revision'),
    ('#change-attentionset-add'         ,'REST-changes - set attentionset'),
    ('#change-attentionset-remove'      ,'REST-changes - remove attentionset'),
    -- Rest accounts - writes
    ('#account-create'                  ,'REST-accounts - create'),
    ('#account-set-name'                ,'REST-accounts - set name'),
    ('#account-delete-name'             ,'REST-accounts - delete name'),
    ('#account-set-status'              ,'REST-accounts - set status'),
    ('#account-set-username'            ,'REST-accounts - set username'),
    ('#account-set-displayname'         ,'REST-accounts - set displayname'),
    ('#account-set-active'              ,'REST-accounts - set active'),
    ('#account-delete-active'           ,'REST-accounts - delete active'),
    ('#account-set-password'            ,'REST-accounts - set password'),
    ('#account-delete-password'         ,'REST-accounts - delete password'),
    ('#account-set-email'               ,'REST-accounts - set email'),
    ('#account-set-preferred-email'     ,'REST-accounts - set preferred email'),
    ('#account-delete-email'            ,'REST-accounts - delete email'),
    ('#account-add-ssh-key'             ,'REST-accounts - add ssh key'),
    ('#account-delete-ssh-key'          ,'REST-accounts - delete ssh key'),
    ('#account-gpg-key'                 ,'REST-accounts - set gpg key'),
    ('#account-delete-gpg-key'          ,'REST-accounts - delete gpg key'),
    ('#account-set-preferences'         ,'REST-accounts - set preferences'),
    ('#account-set-watched-projects'    ,'REST-accounts - set watch project'),
    ('#account-delete-ext-id'           ,'REST-accounts - delete external id'),
    ('#account-delete-draft-comments'   ,'REST-accounts - delete draft comments'),
    ('#account-index'                   ,'REST-accounts - index account'),
    ('#account-star-change'             ,'REST-accounts - star change'),
    ('#account-unstar-change'           ,'REST-accounts - unstar change'),
    -- Rest config - writes
    ('#config-check-consistency'        ,'REST-config - check consistency'),
    ('#config-reload'                   ,'REST-config - reload'),
    ('#config-email-confirm'            ,'REST-config - confirm email'),
    ('#config-cache-operation'          ,'REST-config - cache operation'),
    ('#config-cache-flush'              ,'REST-config - flush cache'),
    ('#config-task-delete'              ,'REST-config - delete task'),
    -- Rest groups - writes
    ('#group-create'                    ,'REST-groups - create'),
    ('#group-rename'                    ,'REST-groups - rename'),
    ('#group-set-description'           ,'REST-groups - set description'),
    ('#group-delete-description'        ,'REST-groups - delete description'),
    ('#group-set-options'               ,'REST-groups - set options'),
    ('#group-set-owner'                 ,'REST-groups - set owner'),
    ('#group-add-member'                ,'REST-groups - add member'),
    ('#group-add-members'               ,'REST-groups - add members'),
    ('#group-delete-member'             ,'REST-groups - delete member'),
    ('#group-delete-members'            ,'REST-groups - delete members'),
    ('#subgroup-add'                    ,'REST-groups - add subgroup'),
    ('#subgroup-add-groups'             ,'REST-groups - add subgroups'),
    ('#subgroup-delete'                 ,'REST-groups - delete subgroup'),
    ('#subgroup-delete-groups'          ,'REST-groups - delete subgroups'),
    -- Rest projects - writes
    ('#project-create'                  ,'REST-projects - create'),
    ('#project-set-config'              ,'REST-projects - set config'),
    ('#project-set-parent'              ,'REST-projects - set parent'),
    ('#project-set-head'                ,'REST-projects - set head'),
    ('#project-run-gc'                  ,'REST-projects - run gc'),
    ('#project-set-description'         ,'REST-projects - set description'),
    ('#project-delete-description'      ,'REST-projects - delete description'),
    ('#project-edit-access'             ,'REST-projects - edit access'),
    ('#project-edit-access-review'      ,'REST-projects - edit review access'),
    ('#project-index'                   ,'REST-projects - index project'),
    ('#project-index-changes'           ,'REST-projects - index changes in project'),
    ('#branch-create'                   ,'REST-projects - create branch'),
    ('#branch-delete'                   ,'REST-projects - delete branch'),
    ('#branch-delete-branches'          ,'REST-projects - delete branches'),
    ('#tag-create'                      ,'REST-projects - create tag'),
    ('#tag-delete'                      ,'REST-projects - delete tag'),
    ('#commit-cherrypick'               ,'REST-projects - cherrypick commit'),
    ('#dashboard-set'                   ,'REST-projects - set dashboard'),
    ('#dashboard-delete'                ,'REST-projects - delete dashboard'),
    ('#label-set'                       ,'REST-projects - set label'),
    ('#label-delete'                    ,'REST-projects - delete label'),
    ('#label-batch-update'              ,'REST-projects - label batch update'),
    ('#submit_req-set'                  ,'REST-projects - set submit requirements'),
    ('#submit_req-delete'               ,'REST-projects - delete submit requirements'),
    -- Rest changes - reads
    ('#changes-read'                    ,'REST-changes - read operations'),
    -- Rest accounts - reads
    ('#accounts-read'                   ,'REST-accounts - read operations'),
    -- Rest config - reads
    ('#config-read'                     ,'REST-config - read operations'),
    -- Rest groups - reads
    ('#groups-read'                     ,'REST-groups - read operations'),
    -- Rest projects - reads
    ('#projects-read'                   ,'REST-projects - read operations')

# ------------------------------------------
# GET TOTALS (OPERATION AND ALL LOGS)
# ------------------------------------------
:eval ;SELECT COUNT(*) AS total FROM gerrit_httpd_log WHERE log_tags IS NOT NULL $and_user_filter
:eval ;SELECT COUNT(*) AS grand_total FROM gerrit_httpd_log $where_user_filter

# ------------------------------------------
# DISPLAY ON SCREEN GLOBAL STATS
# ------------------------------------------
:echo
:echo
:echo - HTTP summary (total operations: $total, grand total: $grand_total, totals and stats filtered by user: $user)
:eval ;SELECT
    CASE
        WHEN (SELECT message FROM gerrit_tags WHERE tag = json_extract(log_tags,'$[0]')) LIKE 'GIT-%' THEN 'Git'
        WHEN (SELECT message FROM gerrit_tags WHERE tag = json_extract(log_tags,'$[0]')) LIKE 'REST-%' THEN 'Rest-Api'
        WHEN (SELECT message FROM gerrit_tags WHERE tag = json_extract(log_tags,'$[0]')) LIKE 'STATIC-%' THEN 'Static'
    END as Action,
    COUNT(*) as Operations,
    ROUND((COUNT(*)* 100.0 / $total),2) AS '% of total operations',
    ROUND((COUNT(*)* 100.0 / $grand_total),2) AS '% of grand total'
FROM gerrit_httpd_log
WHERE log_tags IS NOT NULL $and_user_filter
GROUP BY Action
ORDER BY Operations DESC
:write-table-to -

# ------------------------------------------
# DISPLAY ON SCREEN OPERATIONS STATS
# ------------------------------------------
:echo
:echo
:echo - HTTP operations summary (total operations: $total, grand total: $grand_total, totals and stats filtered by user: $user)
:eval ;SELECT
    CASE
        WHEN (SELECT message FROM gerrit_tags WHERE tag = json_extract(log_tags,'$[0]')) IS NULL THEN json_extract(log_tags,'$[0]')
        ELSE (SELECT message FROM gerrit_tags WHERE tag = json_extract(log_tags,'$[0]'))
    END as Action,
    COUNT(*) as Operations,
    ROUND((COUNT(*)* 100.0 / $total),2) AS '% of total operations',
    ROUND((COUNT(*)* 100.0 / $grand_total),2) AS '% of grand total'
FROM gerrit_httpd_log
WHERE log_tags IS NOT NULL $and_user_filter
GROUP BY log_tags
ORDER BY Operations DESC
:write-table-to -